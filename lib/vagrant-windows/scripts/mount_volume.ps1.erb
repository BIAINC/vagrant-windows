
function Test-ReparsePoint([string]$path) {
  $file = Get-Item $path -Force -ea 0
  return [bool]($file.Attributes -band [IO.FileAttributes]::ReparsePoint)
}

$MountPoint = [System.IO.Path]::GetFullPath("<%= options[:mount_point] %>")
$ShareName = "<%= options[:share_name] %>"
$VmProviderUncPath = "<%= options[:vm_provider_unc_path] %>"

$smbUsername = "<%= options[:username] %>"
$smbPassword = "<%= options[:password] %>"

# https://github.com/BIAINC/vagrant-windows/issues/4
# Not sure why this works, but it does.

if($smbUsername -and $smbPassword) {
  Write-Host "Saving credentials for username $smbUsername"
  & cmdkey "/add:$(([System.Uri]$VmProviderUncPath).Authority)" "/user:$smbUsername" "/pass:$smbPassword" 2>&1 | Out-Null
} 
  
Write-Host "Creating net share to $VmProviderUncPath for path $MountPoint"
& net use "$VmProviderUncPath" /p:yes 2>&1 | Out-Null

if ( $LASTEXITCODE -ne 0 )
  {
    Write-Error "Failed to mount network share $ShareName from $VmProviderUncPath (Using username: $smbUsername)"
    exit 1
  }

Write-Host "Attempting to mount $ShareName to $MountPoint"
if( (Test-Path "$MountPoint") -and (Test-ReparsePoint "$MountPoint") )
{
  Write-Host "Junction already exists, so I will delete it"
  # Powershell refuses to delete junctions, oh well use cmd
  cmd /c rd "$MountPoint"

  if ( $LASTEXITCODE -ne 0 )
  {
    Write-Error "Failed to delete symbolic link at $MountPoint"
    exit 1
  }

} 
elseif(Test-Path $MountPoint) 
{
  Write-Host "Mount point already exists and is not a symbolic link"
  exit 1
}

$BaseDirectory = [System.IO.Path]::GetDirectoryName($MountPoint)

if (-not (Test-Path $BaseDirectory))
{
  Write-Host "Creating parent directory for mount point $BaseDirectory"
  New-Item $BaseDirectory -Type Directory -Force | Out-Null
}

cmd /c mklink /D "$MountPoint" "$VmProviderUncPath" | out-null

if ( $LASTEXITCODE -ne 0 )
{
  exit 1
}